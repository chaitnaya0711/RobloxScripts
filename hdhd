local tool = script.Parent
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local mag = tool:WaitForChild("Magazine")
local handle = tool:WaitForChild("Handle")
local movingPart = handle:WaitForChild("Bolt")

if not movingPart then
	warn("Bolt not found!")
	return
end

-- Variables for arm animation
local rightArmMotor, leftArmMotor
local humanoid
local canPlayAnimation = true
local welds = {}
local debounce = false
local isAnimating = false

-- Create weld and Motor6D functions
local function createWeld(part0, part1, position, rotation)
	local weld = Instance.new("Weld")
	weld.Part0 = part0
	weld.Part1 = part1
	weld.C0 = CFrame.new(position) * CFrame.Angles(rotation.X, rotation.Y, rotation.Z)
	weld.Parent = part0
	return weld
end

local function createMotor6D(part0, part1, position, rotation)
	local motor6D = Instance.new("Motor6D")
	motor6D.Part0 = part0
	motor6D.Part1 = part1
	motor6D.C0 = CFrame.new(position) * CFrame.Angles(rotation.X, rotation.Y, rotation.Z)
	motor6D.Parent = part0
	return motor6D
end

-- Tweening function
local function tweenArm(motor, endPos, endRot, duration)
	local goal = {}
	goal.C0 = CFrame.new(endPos) * CFrame.Angles(endRot.X, endRot.Y, endRot.Z)

	local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local tween = TweenService:Create(motor, tweenInfo, goal)
	tween:Play()

	return tween
end

-- Arm frames for animation
local frames = {
	{
		rightArmPos = Vector3.new(0.85, 0.3, 0.2),
		rightArmRot = Vector3.new(math.rad(90), 0, -190),
		leftArmPos = Vector3.new(-1.4, 0, 0),
		leftArmRot = Vector3.new(0, math.rad(10), math.rad(2)),
	},
	{
		rightArmPos = Vector3.new(0.85, 0.3, 0.2),
		rightArmRot = Vector3.new(math.rad(90), 0, -190),
		leftArmPos = Vector3.new(0.3, -0.9, -1),
		leftArmRot = Vector3.new(math.rad(110), math.rad(30), math.rad(25)),
	},
	{
		rightArmPos = Vector3.new(0.85, 0.4, 0.2),
		rightArmRot = Vector3.new(math.rad(90), 0, -190),
		leftArmPos = Vector3.new(0.3, -0.4, -0.5),
		leftArmRot = Vector3.new(math.rad(100), math.rad(20), math.rad(20)),
	},
	{
		rightArmPos = Vector3.new(0.85, 0.3, 0.2),
		rightArmRot = Vector3.new(math.rad(90), 0, -190),
		leftArmPos = Vector3.new(0.3, -0.9, -1),
		leftArmRot = Vector3.new(math.rad(100), math.rad(20), math.rad(20)),
	},
	{
		rightArmPos = Vector3.new(0.85, 0.35, 0.2),
		rightArmRot = Vector3.new(math.rad(90), 0, -190),
		leftArmPos = Vector3.new(0.3, 0.3, -1.7),
		leftArmRot = Vector3.new(math.rad(100), math.rad(20), math.rad(20)),
	}
}

-- Play animation function
local function playAnimation()
	if canPlayAnimation and not isAnimating then
		canPlayAnimation = false
		isAnimating = true

		if welds.rightArm then welds.rightArm:Destroy() end
		if welds.leftArm then welds.leftArm:Destroy() end

		for _, frame in ipairs(frames) do
			tweenArm(rightArmMotor, frame.rightArmPos, frame.rightArmRot, 0.4)
			tweenArm(leftArmMotor, frame.leftArmPos, frame.leftArmRot, 0.4)
			wait(0.4)
		end

		local character = Players.LocalPlayer.Character or Players.LocalPlayer.CharacterAdded:Wait()
		local rightArm = character:FindFirstChild("RightHand") or character:FindFirstChild("Right Arm")
		local leftArm = character:FindFirstChild("LeftHand") or character:FindFirstChild("Left Arm")
		local torso = character:FindFirstChild("UpperTorso") or character:FindFirstChild("Torso")

		welds.rightArm = createWeld(torso, rightArm, Vector3.new(0.85, 0.3, 0.2), Vector3.new(math.rad(90), 0, 0))
		welds.leftArm = createWeld(torso, leftArm, Vector3.new(0.3, 0.3, -1.7), Vector3.new(math.rad(100), math.rad(20), math.rad(20)))

		canPlayAnimation = true
		isAnimating = false
	end
end

-- Equipped event
tool.Equipped:Connect(function(mouse)
	if debounce then return end
	debounce = true

	local character = Players.LocalPlayer.Character or Players.LocalPlayer.CharacterAdded:Wait()
	local rightArm = character:FindFirstChild("RightHand") or character:FindFirstChild("Right Arm")
	local leftArm = character:FindFirstChild("LeftHand") or character:FindFirstChild("Left Arm")
	local torso = character:FindFirstChild("UpperTorso") or character:FindFirstChild("Torso")

	if rightArm and leftArm and torso then
		if welds.rightArm then welds.rightArm:Destroy() end
		if welds.leftArm then welds.leftArm:Destroy() end
		if rightArmMotor then rightArmMotor:Destroy() end
		if leftArmMotor then leftArmMotor:Destroy() end

		welds.rightArm = createWeld(torso, rightArm, Vector3.new(0.85, 0.3, 0.2), Vector3.new(math.rad(90), 0, 0))
		welds.leftArm = createWeld(torso, leftArm, Vector3.new(0.3, 0.3, -1.7), Vector3.new(math.rad(100), math.rad(20), math.rad(20)))

		rightArmMotor = createMotor6D(torso, rightArm, Vector3.new(0.85, 0.3, 0.2), Vector3.new(math.rad(90), 0, 0))
		leftArmMotor = createMotor6D(torso, leftArm, Vector3.new(0.3, 0.3, -1.7), Vector3.new(math.rad(100), math.rad(20), math.rad(20)))
	end

	mouse.KeyDown:Connect(function(key)
		if key:lower() == "r" then
			playAnimation()
		end
	end)
end)

-- Unequipped event
tool.Unequipped:Connect(function()
	canPlayAnimation = true
	debounce = false

	if welds.rightArm then welds.rightArm:Destroy() end
	if welds.leftArm then welds.leftArm:Destroy() end

	if rightArmMotor then rightArmMotor:Destroy() end
	if leftArmMotor then leftArmMotor:Destroy() end

	welds.rightArm, welds.leftArm = nil, nil
	rightArmMotor, leftArmMotor = nil, nil
end)

-- Magazine transparency handling
local function onKeyPress(input, gameProcessedEvent)
	if input.KeyCode == Enum.KeyCode.R and not gameProcessedEvent then
		-- Make the Mag disappear
		mag.Transparency = 1
		mag.CanCollide = false

		wait(1)

		mag.Transparency = 0
		mag.CanCollide = true
	end
end

UserInputService.InputBegan:Connect(onKeyPress)

-- Moving part setup
movingPart.Anchored = false
movingPart.Transparency = 0
movingPart.Position = handle.Position + Vector3.new(0.074, -0.74, 0.27)

local motor = Instance.new("Motor6D")
motor.Name = "HandleToBolt"
motor.Part0 = handle
motor.Part1 = movingPart
motor.C0 = CFrame.new(0, 0, 0)
motor.C1 = CFrame.new(0.074, -0.74, 0.27)
motor.Parent = handle

movingPart.Parent = handle

-- Animate the moving part
local function animatePart()
	if isAnimating or not canPlayAnimation then return end
	isAnimating = true

	local startCFrame = motor.C1
	local targetCFrame = startCFrame * CFrame.new(0, 0, -1)
	local duration = 0.03
	local elapsedTime = 0

	print("Animating part")

	while elapsedTime < duration do
		local alpha = elapsedTime / duration
		motor.C1 = startCFrame:Lerp(targetCFrame, alpha)
		wait(0.03)
		elapsedTime = elapsedTime + 0.03
	end

	wait(0.1)

	motor.C1 = startCFrame
	isAnimating = false
end

tool.Activated:Connect(animatePart)
