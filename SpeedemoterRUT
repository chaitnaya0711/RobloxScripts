local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Create the speed display GUI
local speedGui = Instance.new("ScreenGui")
speedGui.Name = "SpeedGui"
speedGui.ResetOnSpawn = false
speedGui.Parent = playerGui

local container = Instance.new("Frame")
container.Name = "SpeedContainer"
container.Size = UDim2.new(0, 250, 0, 40)
container.Position = UDim2.new(0.5, -125, 0, -50)  -- Start off-screen
container.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
container.BackgroundTransparency = 0.1
container.Parent = speedGui

local speedLabel = Instance.new("TextLabel")
speedLabel.Name = "SpeedLabel"
speedLabel.Size = UDim2.new(1, -50, 1, 0)
speedLabel.Position = UDim2.new(0, 10, 0, 0)
speedLabel.BackgroundTransparency = 1
speedLabel.Font = Enum.Font.GothamBold
speedLabel.TextColor3 = Color3.new(1, 1, 1)
speedLabel.TextSize = 18
speedLabel.TextXAlignment = Enum.TextXAlignment.Left
speedLabel.TextYAlignment = Enum.TextYAlignment.Center
speedLabel.Parent = container

local unitToggleButton = Instance.new("TextButton")
unitToggleButton.Name = "UnitToggleButton"
unitToggleButton.Size = UDim2.new(0, 60, 0, 30)
unitToggleButton.Position = UDim2.new(1, -70, 0, 5)
unitToggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
unitToggleButton.TextColor3 = Color3.new(1, 1, 1)
unitToggleButton.Font = Enum.Font.Gotham
unitToggleButton.TextSize = 14
unitToggleButton.Text = "m/s"
unitToggleButton.Parent = container

-- Function to convert m/s to mph
local function toMph(mps)
    return mps * 2.23694
end

local unit = "m/s" -- Default unit

-- Create the expand button
local expandButton = Instance.new("ImageButton")
expandButton.Name = "ExpandButton"
expandButton.Size = UDim2.new(0, 30, 0, 30)
expandButton.Position = UDim2.new(1, -35, 0.5, -15)
expandButton.BackgroundTransparency = 1
expandButton.Image = "rbxassetid://3926307971"
expandButton.ImageRectOffset = Vector2.new(324, 364)
expandButton.ImageRectSize = Vector2.new(36, 36)
expandButton.Parent = container

-- Add a subtle glow effect
local glowEffect = Instance.new("ImageLabel")
glowEffect.Name = "GlowEffect"
glowEffect.BackgroundTransparency = 1
glowEffect.Image = "rbxassetid://5028857084"
glowEffect.ImageColor3 = Color3.new(0.8, 0.8, 1)
glowEffect.ImageTransparency = 0.8
glowEffect.Size = UDim2.new(1.5, 0, 1.5, 0)
glowEffect.Position = UDim2.new(-0.25, 0, -0.25, 0)
glowEffect.ZIndex = -1
glowEffect.Parent = container

-- Variables to store the currently tracked object
local trackedObject = player.Character.HumanoidRootPart
local trackedObjectName = "Local Player"
local currentMarker = nil

-- Function to calculate speed in studs/s
local function getSpeed(object)
    if object:IsA("BasePart") then
        return object.Velocity.Magnitude
    elseif object:IsA("Model") and object.PrimaryPart then
        return object.PrimaryPart.Velocity.Magnitude
    end
    return 0
end

-- Function to update speed display with smooth transitions
local lastSpeed = 0
local function updateSpeedDisplay()
    local speed = getSpeed(trackedObject)
    
    -- Update speed based on the selected unit
    local displaySpeed = (unit == "m/s") and speed or toMph(speed)

    lastSpeed = lastSpeed + (displaySpeed - lastSpeed) * 0.1

    speedLabel.Text = string.format("%.2f %s", lastSpeed, unit)
    glowEffect.ImageColor3 = Color3.new(1, 1 - (lastSpeed / 343), 1 - (lastSpeed / 343)) -- Adjust color based on speed
end

-- Function to handle unit toggle button
unitToggleButton.MouseButton1Click:Connect(function()
    if unit == "m/s" then
        unit = "mph"
        unitToggleButton.Text = "mph"
    else
        unit = "m/s"
        unitToggleButton.Text = "m/s"
    end
end)

-- Function to create an animated marker
local function createMarker(part)
    local marker = Instance.new("BillboardGui")
    marker.Name = "SpeedTrackerMarker"
    marker.Size = UDim2.new(0, 50, 0, 50)
    marker.AlwaysOnTop = true
    marker.Parent = part

    local outerCircle = Instance.new("Frame")
    outerCircle.Size = UDim2.new(1, 0, 1, 0)
    outerCircle.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    outerCircle.BackgroundTransparency = 0.5
    outerCircle.Parent = marker

    local innerCircle = Instance.new("Frame")
    innerCircle.Size = UDim2.new(0.6, 0, 0.6, 0)
    innerCircle.Position = UDim2.new(0.2, 0, 0.2, 0)
    innerCircle.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    innerCircle.BackgroundTransparency = 0.2
    innerCircle.Parent = marker

    -- Animate the marker
    spawn(function()
        while marker.Parent do
            local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true)
            local tween = TweenService:Create(outerCircle, tweenInfo, {Size = UDim2.new(1.2, 0, 1.2, 0), BackgroundTransparency = 0.8})
            tween:Play()
            wait(2)
        end
    end)

    return marker
end

-- Function to handle object selection with visual feedback
local function selectObject(object)
    if object.Parent:IsA("Model") and object.Parent:FindFirstChild("Humanoid") then
        trackedObject = object.Parent.PrimaryPart
        trackedObjectName = object.Parent.Name
    elseif not object.Anchored then
        trackedObject = object
        trackedObjectName = object.Name
    else
        return  -- Don't select anchored objects
    end

    if currentMarker then
        currentMarker:Destroy()
    end
    currentMarker = createMarker(trackedObject)

    -- Visual feedback
    local flash = Instance.new("Frame")
    flash.Size = UDim2.new(1, 0, 1, 0)
    flash.BackgroundColor3 = Color3.new(1, 1, 1)
    flash.BackgroundTransparency = 0
    flash.Parent = container

    local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local tween = TweenService:Create(flash, tweenInfo, {BackgroundTransparency = 1})
    tween:Play()

    tween.Completed:Connect(function()
        flash:Destroy()
    end)
end

-- Remove marker button functionality
local removeMarkerButton = Instance.new("TextButton")
removeMarkerButton.Name = "RemoveMarkerButton"
removeMarkerButton.Size = UDim2.new(1, -20, 0, 40)
removeMarkerButton.Position = UDim2.new(0, 10, 1, -50)
removeMarkerButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
removeMarkerButton.Font = Enum.Font.GothamBold
removeMarkerButton.TextColor3 = Color3.new(1, 1, 1)
removeMarkerButton.TextSize = 14
removeMarkerButton.Text = "Remove Marker"
removeMarkerButton.Parent = container

removeMarkerButton.MouseButton1Click:Connect(function()
    if currentMarker then
        currentMarker:Destroy()
        currentMarker = nil
    end
    trackedObject = player.Character.HumanoidRootPart
    trackedObjectName = "Local Player"

    -- Button press animation
    local originalColor = removeMarkerButton.BackgroundColor3
    removeMarkerButton.BackgroundColor3 = Color3.new(1, 0, 0)
    wait(0.1)
    removeMarkerButton.BackgroundColor3 = originalColor
end)

-- Update speed display every frame
RunService.RenderStepped:Connect(updateSpeedDisplay)

-- Make the container draggable with smooth movement
local dragging
local dragInput
local dragStart
local startPos

container.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = container.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        container.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)
