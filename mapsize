local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "MeasurementGui"
screenGui.Parent = playerGui

local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 300, 0, 200)
mainFrame.Position = UDim2.new(0.5, -150, 0.5, -100)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BorderSizePixel = 0
mainFrame.ClipsDescendants = true
mainFrame.Parent = screenGui

-- ... (previous code remains the same)

-- Add map size icon button
local mapSizeButton = Instance.new("ImageButton")
mapSizeButton.Name = "MapSizeButton"
mapSizeButton.Size = UDim2.new(0, 25, 0, 25)
mapSizeButton.Position = UDim2.new(1, -60, 0, 5)
mapSizeButton.BackgroundTransparency = 1
mapSizeButton.Image = "rbxassetid://3926305904" -- Map icon
mapSizeButton.ImageRectOffset = Vector2.new(484, 44)
mapSizeButton.ImageRectSize = Vector2.new(36, 36)
mapSizeButton.Parent = mainFrame

-- Create alert dialog
local alertDialog = Instance.new("Frame")
alertDialog.Name = "AlertDialog"
alertDialog.Size = UDim2.new(0, 250, 0, 150)
alertDialog.Position = UDim2.new(0.5, -125, 0.5, -75)
alertDialog.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
alertDialog.BorderSizePixel = 0
alertDialog.Visible = false
alertDialog.Parent = screenGui

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 10)
UICorner.Parent = alertDialog

local titleLabel = Instance.new("TextLabel")
titleLabel.Name = "TitleLabel"
titleLabel.Size = UDim2.new(1, -20, 0, 30)
titleLabel.Position = UDim2.new(0, 10, 0, 5)
titleLabel.BackgroundTransparency = 1
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextSize = 18
titleLabel.Text = "Map Size"
titleLabel.Parent = alertDialog

local mapSizeLabel = Instance.new("TextLabel")
mapSizeLabel.Name = "MapSizeLabel"
mapSizeLabel.Size = UDim2.new(1, -20, 0, 25)
mapSizeLabel.Position = UDim2.new(0, 10, 0, 40)
mapSizeLabel.BackgroundTransparency = 1
mapSizeLabel.Font = Enum.Font.Gotham
mapSizeLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
mapSizeLabel.TextSize = 14
mapSizeLabel.Text = "Loading..."
mapSizeLabel.Parent = alertDialog

local copyButton = Instance.new("TextButton")
copyButton.Name = "CopyButton"
copyButton.Size = UDim2.new(0, 100, 0, 30)
copyButton.Position = UDim2.new(0.5, -50, 1, -40)
copyButton.BackgroundColor3 = Color3.fromRGB(0, 120, 180)
copyButton.Font = Enum.Font.GothamSemibold
copyButton.TextColor3 = Color3.new(1, 1, 1)
copyButton.TextSize = 14
copyButton.Text = "Copy"
copyButton.Parent = alertDialog

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 6)
UICorner.Parent = copyButton

-- Function to get map size
local function getMapSize()
    local minX, minY, minZ = math.huge, math.huge, math.huge
    local maxX, maxY, maxZ = -math.huge, -math.huge, -math.huge

    for _, part in pairs(workspace:GetDescendants()) do
        if part:IsA("BasePart") then
            local size = part.Size
            local cf = part.CFrame
            local corners = {
                cf * CFrame.new(-size.X/2, -size.Y/2, -size.Z/2),
                cf * CFrame.new(-size.X/2, -size.Y/2, size.Z/2),
                cf * CFrame.new(-size.X/2, size.Y/2, -size.Z/2),
                cf * CFrame.new(-size.X/2, size.Y/2, size.Z/2),
                cf * CFrame.new(size.X/2, -size.Y/2, -size.Z/2),
                cf * CFrame.new(size.X/2, -size.Y/2, size.Z/2),
                cf * CFrame.new(size.X/2, size.Y/2, -size.Z/2),
                cf * CFrame.new(size.X/2, size.Y/2, size.Z/2)
            }

            for _, corner in ipairs(corners) do
                local x, y, z = corner.X, corner.Y, corner.Z
                minX, minY, minZ = math.min(minX, x), math.min(minY, y), math.min(minZ, z)
                maxX, maxY, maxZ = math.max(maxX, x), math.max(maxY, y), math.max(maxZ, z)
            end
        end
    end

    return Vector3.new(maxX - minX, maxY - minY, maxZ - minZ)
end

-- Function to show alert dialog
local function showAlertDialog()
    local mapSize = getMapSize()
    mapSizeLabel.Text = string.format("X: %.2f, Y: %.2f, Z: %.2f", mapSize.X, mapSize.Y, mapSize.Z)

    alertDialog.Position = UDim2.new(0.5, -125, 0.5, -175)
    alertDialog.Visible = true

    local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out)
    local tween = TweenService:Create(alertDialog, tweenInfo, {Position = UDim2.new(0.5, -125, 0.5, -75)})
    tween:Play()

    wait(4)

    local fadeOutTween = TweenService:Create(alertDialog, TweenInfo.new(0.5), {BackgroundTransparency = 1, TextTransparency = 1})
    fadeOutTween:Play()
    fadeOutTween.Completed:Connect(function()
        alertDialog.Visible = false
        alertDialog.BackgroundTransparency = 0
        alertDialog.TextTransparency = 0
    end)
end

-- Connect map size button
mapSizeButton.MouseButton1Click:Connect(showAlertDialog)

-- Connect copy button
copyButton.MouseButton1Click:Connect(function()
    local mapSize = getMapSize()
    local sizeString = string.format("Map Size: X: %.2f, Y: %.2f, Z: %.2f", mapSize.X, mapSize.Y, mapSize.Z)
    setclipboard(sizeString)
    copyButton.Text = "Copied!"
    wait(1)
    copyButton.Text = "Copy"
end)

-- ... (rest of the previous code remains the same)