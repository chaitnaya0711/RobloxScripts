local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local player = Players.LocalPlayer

-- Create GUI elements
local ScreenGui = Instance.new("ScreenGui")
local BlurEffect = Instance.new("BlurEffect")
local MainFrame = Instance.new("Frame")
local OpenButton = Instance.new("TextButton")
local CloseButton = Instance.new("TextButton")
local PlayerList = Instance.new("ScrollingFrame")
local UICorner = Instance.new("UICorner")
local ListLayout = Instance.new("UIListLayout")
local Title = Instance.new("TextLabel")

-- Create DetailPanel for showing friend/follower information
local DetailPanel = Instance.new("Frame")
DetailPanel.Name = "DetailPanel"
DetailPanel.Parent = MainFrame
DetailPanel.Position = UDim2.new(1.02, 0, 0, 0)
DetailPanel.Size = UDim2.new(0.6, 0, 1, 0)
DetailPanel.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
DetailPanel.BackgroundTransparency = 0.1
DetailPanel.Visible = false
Instance.new("UICorner", DetailPanel).CornerRadius = UDim.new(0.02, 0)

-- Detail Panel Title
local DetailTitle = Instance.new("TextLabel")
DetailTitle.Parent = DetailPanel
DetailTitle.Position = UDim2.new(0, 0, 0, 0)
DetailTitle.Size = UDim2.new(1, 0, 0.1, 0)
DetailTitle.BackgroundTransparency = 1
DetailTitle.Text = "Player Details"
DetailTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
DetailTitle.Font = Enum.Font.GothamBold
DetailTitle.TextSize = 18

-- Create tabs for different information types
local TabButtons = Instance.new("Frame")
TabButtons.Parent = DetailPanel
TabButtons.Position = UDim2.new(0.05, 0, 0.12, 0)
TabButtons.Size = UDim2.new(0.9, 0, 0.08, 0)
TabButtons.BackgroundTransparency = 1

local function createTab(name, position)
    local tab = Instance.new("TextButton")
    tab.Parent = TabButtons
    tab.Position = position
    tab.Size = UDim2.new(0.3, 0, 1, 0)
    tab.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    tab.Text = name
    tab.TextColor3 = Color3.fromRGB(255, 255, 255)
    tab.Font = Enum.Font.GothamBold
    tab.TextSize = 14
    Instance.new("UICorner", tab).CornerRadius = UDim.new(0.2, 0)
    return tab
end

local FriendsTab = createTab("Friends", UDim2.new(0, 0, 0, 0))
local FollowersTab = createTab("Followers", UDim2.new(0.35, 0, 0, 0))
local FollowingTab = createTab("Following", UDim2.new(0.7, 0, 0, 0))

-- Create content frame for tab information
local ContentFrame = Instance.new("ScrollingFrame")
ContentFrame.Parent = DetailPanel
ContentFrame.Position = UDim2.new(0.05, 0, 0.22, 0)
ContentFrame.Size = UDim2.new(0.9, 0, 0.75, 0)
ContentFrame.BackgroundTransparency = 0.9
ContentFrame.BorderSizePixel = 0
ContentFrame.ScrollBarThickness = 6
Instance.new("UICorner", ContentFrame).CornerRadius = UDim.new(0.02, 0)

local ContentListLayout = Instance.new("UIListLayout")
ContentListLayout.Parent = ContentFrame
ContentListLayout.Padding = UDim.new(0, 5)
ContentListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
ContentListLayout.SortOrder = Enum.SortOrder.Name

-- Function to create a user entry in the content frame
local function createUserEntry(username, displayName, thumbnail)
    local entry = Instance.new("Frame")
    entry.Size = UDim2.new(0.95, 0, 0, 60)
    entry.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    entry.BackgroundTransparency = 0.3

    local userImage = Instance.new("ImageLabel")
    userImage.Parent = entry
    userImage.Position = UDim2.new(0.02, 0, 0.1, 0)
    userImage.Size = UDim2.new(0, 40, 0, 40)
    userImage.BackgroundTransparency = 1
    userImage.Image = thumbnail or "rbxasset://textures/ui/GuiImagePlaceholder.png"
    Instance.new("UICorner", userImage).CornerRadius = UDim.new(1, 0)

    local userName = Instance.new("TextLabel")
    userName.Parent = entry
    userName.Position = UDim2.new(0.15, 0, 0.1, 0)
    userName.Size = UDim2.new(0.8, 0, 0.4, 0)
    userName.BackgroundTransparency = 1
    userName.Text = username
    userName.TextColor3 = Color3.fromRGB(255, 255, 255)
    userName.Font = Enum.Font.GothamBold
    userName.TextSize = 14
    userName.TextXAlignment = Enum.TextXAlignment.Left

    local displayNameLabel = Instance.new("TextLabel")
    displayNameLabel.Parent = entry
    displayNameLabel.Position = UDim2.new(0.15, 0, 0.5, 0)
    displayNameLabel.Size = UDim2.new(0.8, 0, 0.4, 0)
    displayNameLabel.BackgroundTransparency = 1
    displayNameLabel.Text = displayName
    displayNameLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    displayNameLabel.Font = Enum.Font.Gotham
    displayNameLabel.TextSize = 12
    displayNameLabel.TextXAlignment = Enum.TextXAlignment.Left

    Instance.new("UICorner", entry).CornerRadius = UDim.new(0.1, 0)
    entry.Parent = ContentFrame
    return entry
end

-- Function to get user thumbnail
local function getUserThumbnail(userId)
    local success, result = pcall(function()
        return Players:GetUserThumbnailAsync(userId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size420x420)
    end)
    return success and result or nil
end

-- Function to get friends list
local function getFriendsList(userId)
    local friends = {}
    local success, page = pcall(function()
        return Players:GetFriendsAsync(userId)
    end)
    
    if success then
        while true do
            for _, item in ipairs(page:GetCurrentPage()) do
                table.insert(friends, {
                    username = item.Username,
                    displayName = item.DisplayName,
                    userId = item.Id
                })
            end
            
            if page.IsFinished then
                break
            end
            page:AdvanceToNextPageAsync()
        end
    end
    
    return friends
end

-- Function to get followers/following
local function getFollowList(userId, listType)
    local users = {}
    local success, page = pcall(function()
        if listType == "followers" then
            return game:GetService("UserService"):GetUserFollowersAsync(userId)
        else
            return game:GetService("UserService"):GetUserFollowingAsync(userId)
        end
    end)
    
    if success then
        while true do
            for _, item in ipairs(page:GetCurrentPage()) do
                table.insert(users, {
                    username = item.Username,
                    displayName = item.DisplayName,
                    userId = item.Id
                })
            end
            
            if page.IsFinished then
                break
            end
            page:AdvanceToNextPageAsync()
        end
    end
    
    return users
end

-- Function to update content frame
local function updateContentFrame(userId, listType)
    -- Clear existing content
    for _, child in ipairs(ContentFrame:GetChildren()) do
        if child:IsA("Frame") then
            child:Destroy()
        end
    end
    
    -- Get appropriate list based on type
    local userList
    if listType == "friends" then
        userList = getFriendsList(userId)
    elseif listType == "followers" then
        userList = getFollowList(userId, "followers")
    else
        userList = getFollowList(userId, "following")
    end
    
    -- Create entries for each user
    for _, userData in ipairs(userList) do
        local thumbnail = getUserThumbnail(userData.userId)
        createUserEntry(userData.username, userData.displayName, thumbnail)
    end
    
    ContentFrame.CanvasSize = UDim2.new(0, 0, 0, ContentListLayout.AbsoluteContentSize.Y + 10)
end

-- Tab button connections
local function setupTabButton(button, listType)
    button.MouseButton1Click:Connect(function()
        local selectedPlayer = DetailPanel:GetAttribute("SelectedPlayer")
        if selectedPlayer then
            updateContentFrame(selectedPlayer, listType)
            
            -- Update tab appearances
            for _, tab in ipairs(TabButtons:GetChildren()) do
                if tab:IsA("TextButton") then
                    tab.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
                end
            end
            button.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
        end
    end)
end

setupTabButton(FriendsTab, "friends")
setupTabButton(FollowersTab, "followers")
setupTabButton(FollowingTab, "following")

-- Modify the existing player button click handler
local function onPlayerButtonClick(plr)
    DetailPanel:SetAttribute("SelectedPlayer", plr.UserId)
    DetailTitle.Text = plr.Name .. "'s Details"
    
    -- Show detail panel with animation
    DetailPanel.Position = UDim2.new(1.02, 0, 0, 0)
    DetailPanel.Visible = true
    TweenService:Create(DetailPanel, TweenInfo.new(0.5), {Position = UDim2.new(1, 0, 0, 0)}):Play()
    
    -- Trigger friends tab by default
    FriendsTab:Fire()
end

-- Update the createPlayerButton function to include the new click handler
local function createPlayerButton(plr)
    -- [Previous createPlayerButton code remains the same until the Button.MouseButton1Click connection]
    
    Button.MouseButton1Click:Connect(function()
        onPlayerButtonClick(plr)
    end)
end

-- Update the closeGUI function to also hide the detail panel
local function closeGUI()
    TweenService:Create(MainFrame, TweenInfo.new(0.8, Enum.EasingStyle.Quart), {Position = UDim2.new(0.5, 0, 1.5, 0)}):Play()
    TweenService:Create(BlurEffect, TweenInfo.new(0.8), {Size = 0}):Play()
    TweenService:Create(DetailPanel, TweenInfo.new(0.5), {Position = UDim2.new(1.02, 0, 0, 0)}):Play()
    wait(0.5)
    DetailPanel.Visible = false
end

-- [Rest of the original code remains the same]
-- Button connections
OpenButton.MouseButton1Click:Connect(openGUI)
CloseButton.MouseButton1Click:Connect(closeGUI)

-- Player events
Players.PlayerAdded:Connect(updatePlayerList)
Players.PlayerRemoving:Connect(updatePlayerList)

-- Initial setup
updatePlayerList()